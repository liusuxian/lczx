// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// WdkFileDao is the data access object for table wdk_file.
type WdkFileDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns WdkFileColumns // columns contains all the column names of Table for convenient usage.
}

// WdkFileColumns defines and stores column names for table wdk_file.
type WdkFileColumns struct {
	Id         string // 上传文件ID
	ProjectId  string // 所属项目ID
	Name       string // 文件名称
	Type       string // 文件类型 0:合同扫描文件 1:年度服务计划书 2:总结报告 3:项目移交 4:复盘报告 5:文件签收单 6:满意度调查表
	CreateBy   string // 上传者用户ID
	CreateName string // 上传者姓名
	OriginUrl  string // 原始文件url
	PdfUrl     string // pdf文件url
	CreateAt   string // 上传时间
	UpdateAt   string // 更新时间
}

//  wdkFileColumns holds the columns for table wdk_file.
var wdkFileColumns = WdkFileColumns{
	Id:         "id",
	ProjectId:  "project_id",
	Name:       "name",
	Type:       "type",
	CreateBy:   "create_by",
	CreateName: "create_name",
	OriginUrl:  "origin_url",
	PdfUrl:     "pdf_url",
	CreateAt:   "create_at",
	UpdateAt:   "update_at",
}

// NewWdkFileDao creates and returns a new DAO object for table data access.
func NewWdkFileDao() *WdkFileDao {
	return &WdkFileDao{
		group:   "default",
		table:   "wdk_file",
		columns: wdkFileColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *WdkFileDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *WdkFileDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *WdkFileDao) Columns() WdkFileColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *WdkFileDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *WdkFileDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *WdkFileDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
