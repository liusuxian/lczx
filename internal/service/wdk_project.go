// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	v1 "lczx/api/v1"
	"lczx/internal/model"
)

type IWdkProject interface {
	GetWdkProjectList(ctx context.Context, req *v1.WdkProjectListReq) (total int, list []*v1.WdkProjectInfo, err error)
	AddWdkProject(ctx context.Context, req *v1.WdkProjectAddReq) (err error)
	GetWdkProjectById(ctx context.Context, id uint64) (wdkProject *v1.WdkProjectInfo, err error)
	EditWdkProject(ctx context.Context, req *v1.WdkProjectEditReq) (err error)
	DeleteWdkProject(ctx context.Context, ids []uint64) (err error)
	ExportWdkProject(ctx context.Context, req *v1.WdkProjectExportReq) (fileInfo *v1.WdkProjectExportFile, err error)
	GetClientOptionMap() map[string][]*model.ClientOption
	IsWdkProjectNameAvailable(ctx context.Context, name string) (bool, error)
	SetWdkProjectFileUploadStatusFinish(ctx context.Context, id uint64) (err error)
	SetWdkProjectFileUploadStatusAbnormal(ctx context.Context, id uint64) (err error)
	SetWdkProjectFileUploadStatusNormal(ctx context.Context, id uint64) (err error)
	SetWdkProjectStepByFileType(ctx context.Context, id uint64, fileType uint) (err error)
	SetWdkProjectStepByReportStep(ctx context.Context, id uint64, reportStep uint) (err error)
	CheckWdkProjectFileUploadStatus(ctx context.Context)
}

var localWdkProject IWdkProject

func WdkProject() IWdkProject {
	if localWdkProject == nil {
		panic("implement not found for interface IWdkProject, forgot register?")
	}
	return localWdkProject
}

func RegisterWdkProject(i IWdkProject) {
	localWdkProject = i
}
