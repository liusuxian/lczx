// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	v1 "lczx/api/v1"
	"lczx/internal/model"
	"lczx/internal/model/entity"

	"github.com/gogf/gf/v2/container/gset"
)

type IUserManager interface {
	NotCheckAuthUserIds() *gset.Set
	GetUserList(ctx context.Context, req *v1.UserListReq) (total int, list []*entity.User, err error)
	AddUser(ctx context.Context, req *v1.UserAddReq) (err error)
	EditUser(ctx context.Context, req *v1.UserEditReq) (err error)
	ResetUserPwd(ctx context.Context, id uint64, newPassword string) (err error)
	SetUserStatus(ctx context.Context, id uint64, status uint) (err error)
	DeleteUser(ctx context.Context, ids []uint64) (err error)
	GetClientOptionMap() map[string][]*model.ClientOption
	GetProfileList(ctx context.Context, userList []*entity.User) (profileInfos []*v1.UserProfileInfo, err error)
	SearchByRealname(ctx context.Context, realname string) (list []*entity.User, err error)
}

var localUserManager IUserManager

func UserManager() IUserManager {
	if localUserManager == nil {
		panic("implement not found for interface IUserManager, forgot register?")
	}
	return localUserManager
}

func RegisterUserManager(i IUserManager) {
	localUserManager = i
}
