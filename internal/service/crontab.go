// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	v1 "lczx/api/v1"
	"lczx/internal/model"
	"lczx/internal/model/entity"
)

type ICrontab interface {
	GetCrontabList(ctx context.Context, req *v1.CrontabListReq) (total int, list []*entity.Crontab, err error)
	AddCrontab(ctx context.Context, req *v1.CrontabAddReq) (err error)
	GetCrontabById(ctx context.Context, id uint64) (crontab *entity.Crontab, err error)
	EditCrontab(ctx context.Context, req *v1.CrontabEditReq) (err error)
	DeleteCrontab(ctx context.Context, ids []uint64) (err error)
	GetClientOptionMap() map[string][]*model.ClientOption
	RegisterAndStartAllTask(ctx context.Context)
	StartTask(ctx context.Context, crontab *entity.Crontab, upStatus bool) (err error)
	StopTask(ctx context.Context, crontab *entity.Crontab, upStatus bool) (err error)
	RunTask(ctx context.Context, crontab *entity.Crontab) (err error)
}

var localCrontab ICrontab

func Crontab() ICrontab {
	if localCrontab == nil {
		panic("implement not found for interface ICrontab, forgot register?")
	}
	return localCrontab
}

func RegisterCrontab(i ICrontab) {
	localCrontab = i
}
