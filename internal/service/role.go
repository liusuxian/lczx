// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"
	v1 "lczx/api/v1"
	"lczx/internal/model"
	"lczx/internal/model/entity"
)

type IRole interface {
	GetRoleList(ctx context.Context, req *v1.RoleListReq) (total int, list []*entity.Role, err error)
	AddRole(ctx context.Context, req *v1.RoleAddReq) (err error)
	EditRole(ctx context.Context, req *v1.RoleEditReq) (err error)
	SetRoleStatus(ctx context.Context, req *v1.RoleSetStatusReq) (err error)
	SetRoleDataScope(ctx context.Context, req *v1.RoleSetDataScopeReq) (err error)
	DeleteRoleByIds(ctx context.Context, ids []uint64) (err error)
	GetEnableRoles(ctx context.Context) (roles []*entity.Role, err error)
	GetAllRoles(ctx context.Context) (roles []*entity.Role, err error)
	GetRoleById(ctx context.Context, id uint64) (role *entity.Role, err error)
	GetMenuIdsByRoleId(ctx context.Context, id uint64) (menuIds []uint64, err error)
	GetClientOptionMap() map[string][]*model.ClientOption
	AddRoleRule(ctx context.Context, iRule any, roleId uint64) (err error)
	EditRoleRule(ctx context.Context, iRule any, roleId uint64) (err error)
	GetUserRoleIds(ctx context.Context, id uint64) (roleIds []uint64, err error)
	GetUserRoles(ctx context.Context, id uint64) (roles []*entity.Role, err error)
	GetUserMenuList(ctx context.Context, ids []uint64) (menuList []string, err error)
	AddUserRoles(ctx context.Context, roleIds []uint64, userId uint64) (err error)
	EditUserRoles(ctx context.Context, roleIds []uint64, userId uint64) (err error)
	GetEnableRolesByIds(ctx context.Context, ids []uint64) (roles []*entity.Role, err error)
}

var localRole IRole

func Role() IRole {
	if localRole == nil {
		panic("implement not found for interface IRole, forgot register?")
	}
	return localRole
}

func RegisterRole(i IRole) {
	localRole = i
}
