// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// WdkFileDao is the data access object for table wdk_file.
type WdkFileDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns WdkFileColumns // columns contains all the column names of Table for convenient usage.
}

// WdkFileColumns defines and stores column names for table wdk_file.
type WdkFileColumns struct {
	FileId       string // 上传文件ID
	ProjectId    string // 所属项目ID
	Name         string // 文件名
	CreateBy     string // 上传者用户ID
	CreateName   string // 上传者姓名
	AuditStatus  string // 审核状态 0:不需要审核 1:审核中 2:已通过 3:未通过
	AuditNames   string // 审核人员们的姓名
	AuditEndTime string // 审核完成时间
	Excellence   string // 是否是优秀报告 0:无该属性 1:被推荐为优秀报告 2:未被评选为优秀报告 3:已被评选为优秀报告
	OriginUrl    string // 原始文件url
	PdfUrl       string // pdf文件url
	CreateAt     string // 上传时间
	UpdateAt     string // 更新时间
	DeletedAt    string // 软删除时间
}

//  wdkFileColumns holds the columns for table wdk_file.
var wdkFileColumns = WdkFileColumns{
	FileId:       "file_id",
	ProjectId:    "project_id",
	Name:         "name",
	CreateBy:     "create_by",
	CreateName:   "create_name",
	AuditStatus:  "audit_status",
	AuditNames:   "audit_names",
	AuditEndTime: "audit_end_time",
	Excellence:   "excellence",
	OriginUrl:    "origin_url",
	PdfUrl:       "pdf_url",
	CreateAt:     "create_at",
	UpdateAt:     "update_at",
	DeletedAt:    "deleted_at",
}

// NewWdkFileDao creates and returns a new DAO object for table data access.
func NewWdkFileDao() *WdkFileDao {
	return &WdkFileDao{
		group:   "default",
		table:   "wdk_file",
		columns: wdkFileColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *WdkFileDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *WdkFileDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *WdkFileDao) Columns() WdkFileColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *WdkFileDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *WdkFileDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *WdkFileDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
